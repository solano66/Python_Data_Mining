## 3.1 隨機誤差模型 ------------------------------------------------------------------------
library(DMwR2) # or library(DMwR2) for higher R version
data(algae)
View(algae)
algae$season <- factor(algae$season, levels = c("spring", "summer", "autumn", "winter"))
algae$size <- factor(algae$size, levels = c("small", "medium", "large"))
algae$speed <- factor(algae$speed, levels = c("low", "medium", "high"))
manyNAs(algae)
View(algae)
-manyNAs(algae)
# 移除遺缺程度嚴重的樣本(如果使用古典統計方法，或者支援向量機及神經網絡，則須對遺缺數據進行清理; 迴歸樹/模型樹可以接受樣本中的缺失值！)
algae <- algae[-manyNAs(algae), ]
View(algae)
?knnImputation
# 以近鄰的中位數填補遺缺值(knnImputation背後是一個程序)
cleanAlgae <- knnImputation(algae, k = 10)
is.na(cleanAlgae)
# 確認資料表中已無遺缺值
sum(is.na(cleanAlgae))
# 設定亂數種子，使得結果可重製
set.seed(1234)
# 隨機保留50個樣本稍後進行模型測試
idx <- sample(nrow(cleanAlgae), 50) # cleanAlgae.shape[0] in Python
# 切割出訓練與測試樣本
train <- cleanAlgae[-idx, 1:12]
test <- cleanAlgae[idx, 1:12]
# 以148個訓練樣本估計函數關係
a1Lm <- lm(a1 ~ ., data = train)
# 擬合完成後運用模型a1Lm估計訓練樣本的a1有害藻類濃度
trainPred <- predict(a1Lm, train[-12]) # alLm.predict(train[-12]) in Python
# 模型a1Lm摘要報表
summary(a1Lm) # 除了標籤編碼，R建模時會自動對因子變量做虛擬編碼！
# 訓練樣本的模型績效指標RMSE值(參見3.2.1節)
# 因為球員兼裁判，所以較為樂觀
(trainRMSE <- sqrt(mean((train$a1 - trainPred)^2)))
# 以模型a1Lm估計測試樣本的a1有害藻類濃度
testPred <- predict(a1Lm, test[-12])
# 測試樣本的模型績效指標RMSE值
(testRMSE <- sqrt(mean((test$a1 - testPred)^2)))
set.seed(89)
idx <- sample(nrow(cleanAlgae), 50)
# 切割出訓練與測試樣本
train <- cleanAlgae[-idx, 1:12]
test <- cleanAlgae[idx, 1:12]
a1Lm2 <- lm(a1 ~ ., data = train)
# 擬合完成後運用模型a1Lm2估計訓練樣本的a1有害藻類濃度
trainPred <- predict(a1Lm2, train[-12])
## ------------------------------------------------------------------------
# 測試集的RMSE比訓練集RMSE還低的結果(實驗需要多做幾次！)
(trainRMSE <- sqrt(mean((train$a1 - trainPred)^2)))
testPred <- predict(a1Lm2, test[-12])
(testRMSE <- sqrt(mean((test$a1 - testPred)^2)))
setwd("/Volumes/KINGSTON/GoogleDrive_HP/PragmaticBigDataAnalytics/supplements/05_supplements_python")
mtcars <- read.csv('mtcars.csv', row.names = c(1))
mtcars <- read.csv('mtcars.csv', row.names = c(1))
fuelEconomy <- lm(mpg ~ cyl + wt, data = mtcars)
summary(fuelEconomy)
par(mfrow = c(2,2))
plot(fuelEconomy)
par(mfrow = c(1,1))
